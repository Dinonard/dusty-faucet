{
    "metadataVersion": "0.1.0",
    "source": {
        "hash": "0xe13e569ff0af8f1fc622a118f3a75629a043416add0bdfc98848e584fcfbe6e3",
        "language": "ink! 3.0.0-rc3",
        "compiler": "rustc 1.54.0-nightly"
    },
    "contract": {
        "name": "plasm_faucet",
        "version": "3.0.0-rc3",
        "authors": ["Kentaro Vadney <kentaro@stake.co.jp>"]
    },
    "spec": {
        "constructors": [
            {
                "args": [],
                "docs": ["Create new instance of this contract."],
                "name": ["new"],
                "selector": "0x9bae9d5e"
            }
        ],
        "docs": [],
        "events": [],
        "messages": [
            {
                "args": [
                    {
                        "name": "to",
                        "type": {
                            "displayName": ["AccountId"],
                            "type": 2
                        }
                    }
                ],
                "docs": [
                    " Transfers `self.AMOUNT` of PLD to caller.",
                    "",
                    " # Errors",
                    "",
                    " - Panics if requested transfer exceeds contract balance.",
                    " - Panics if requested transfer brings the contract balance",
                    "   below the subsistence threshold.",
                    " - Panics if transfer fails for any other reason."
                ],
                "mutates": true,
                "name": ["drip"],
                "payable": false,
                "returnType": null,
                "selector": "0x4502e207"
            },
            {
                "args": [],
                "docs": [
                    " Asserts that the token self.amount sent as payment with this call",
                    " is exactly `self.AMOUNT`. This method will fail otherwise, and the",
                    " transaction would then be reverted.",
                    "",
                    " # Note",
                    "",
                    " The method needs to be annotated with `payable`; only then it is",
                    " allowed to receive value as part of the call."
                ],
                "mutates": false,
                "name": ["was_it_amt"],
                "payable": true,
                "returnType": null,
                "selector": "0xcafebabe"
            }
        ]
    },
    "storage": {
        "struct": {
            "fields": [
                {
                    "layout": {
                        "cell": {
                            "key": "0x0000000000000000000000000000000000000000000000000000000000000000",
                            "ty": 1
                        }
                    },
                    "name": "AMOUNT"
                },
                {
                    "layout": {
                        "cell": {
                            "key": "0x0100000000000000000000000000000000000000000000000000000000000000",
                            "ty": 2
                        }
                    },
                    "name": "owner"
                }
            ]
        }
    },
    "types": [
        {
            "def": {
                "primitive": "u128"
            }
        },
        {
            "def": {
                "composite": {
                    "fields": [
                        {
                            "type": 3,
                            "typeName": "[u8; 32]"
                        }
                    ]
                }
            },
            "path": ["ink_env", "types", "AccountId"]
        },
        {
            "def": {
                "array": {
                    "len": 32,
                    "type": 4
                }
            }
        },
        {
            "def": {
                "primitive": "u8"
            }
        }
    ]
}
